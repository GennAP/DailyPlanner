[{"C:\\Users\\voron\\Documents\\projects\\zadanie\\src\\index.js":"1","C:\\Users\\voron\\Documents\\projects\\zadanie\\src\\App.js":"2","C:\\Users\\voron\\Documents\\projects\\zadanie\\src\\reportWebVitals.js":"3","C:\\Users\\voron\\Documents\\projects\\zadanie\\src\\components\\calendar\\index.jsx":"4"},{"size":500,"mtime":499162500000,"results":"5","hashOfConfig":"6"},{"size":195,"mtime":1612733547040,"results":"7","hashOfConfig":"6"},{"size":362,"mtime":499162500000,"results":"8","hashOfConfig":"6"},{"size":3786,"mtime":1612733126266,"results":"9","hashOfConfig":"6"},{"filePath":"10","messages":"11","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"12"},"l6506t",{"filePath":"13","messages":"14","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"15","messages":"16","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"12"},{"filePath":"17","messages":"18","errorCount":2,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"19","usedDeprecatedRules":"12"},"C:\\Users\\voron\\Documents\\projects\\zadanie\\src\\index.js",[],["20","21"],"C:\\Users\\voron\\Documents\\projects\\zadanie\\src\\App.js",["22"],"C:\\Users\\voron\\Documents\\projects\\zadanie\\src\\reportWebVitals.js",[],"C:\\Users\\voron\\Documents\\projects\\zadanie\\src\\components\\calendar\\index.jsx",["23","24","25"],"import React from 'react';\r\nimport './index.css';\r\nimport 'App.js';\r\n\r\nexport default class calendar extends React.Component {\r\n    static defaultProps = {\r\n        date: new Date(),\r\n        years: [2010, 2011, 2012, 2013, 2014, 2015, 2016, 2017, 2018, 2019, 2020],\r\n        monthNames: ['Январь', 'Февраль', 'Март', 'Апрель', 'Май', 'Июнь', 'Июль', 'Август', 'Сентябрь', 'Октябрь', 'Ноябрь', 'Декабрь'],\r\n        weekDayNames: ['Пн', 'Вт', 'Ср', 'Чт', 'Пт', 'Сб', 'Вс'],\r\n        onChange: Function.prototype\r\n    };\r\n    \r\n    state = {\r\n        date: this.props.date,\r\n        currentDate: new Date(),\r\n        selectedDate: null\r\n    }\r\n\r\n    get year() {\r\n        return this.state.date.getFullYear();\r\n    }\r\n    get month() {\r\n        return this.state.date.getMonth();\r\n    }\r\n    get day() {\r\n        return this.state.date.getDay();\r\n    }\r\n\r\n    handlePrevMonthButtonClick = () => {\r\n        const date = new Date(this.year, this.month - 1);\r\n        console.log(date);\r\n        this.setState({date})\r\n    };\r\n    handleNextMonthButtonClick = () => {\r\n        const date = new Date(this.year, this.month - 1);\r\n        this.setState({date})\r\n    };\r\n    handleSelectChange = () => {};\r\n    handleDayClick = date => {\r\n        console.log(date);\r\n        this.setState({selectedDate: date});\r\n        this.props.onChange(date);\r\n    }\r\n\r\n    render() {\r\n        const { years, monthNems, weekDayNames } = this.props;\r\n\r\n        const monthData = [\r\n            [undefined, undefined, new Date(), new Date(), new Date(), new Date(), new Date()],\r\n            [new Date(), new Date(), new Date(), new Date(), new Date(), new Date(), new Date()],\r\n            [new Date(), new Date(), new Date(), new Date(), new Date(), new Date(), new Date()],\r\n            [new Date(), new Date(), new Date(), new Date(), undefined, undefined, undefined]\r\n        ];\r\n\r\n        return (\r\n            <div className = \"calendar\">\r\n                 <header>\r\n                    <button onClick={this.handlePrevMonthButtonClick}>{'<'}</button>\r\n\r\n                    <select>\r\n                        {monthNames.map((name, index) =>\r\n                            <option key={name} value={index}>{name}</option>\r\n                        )}\r\n                    </select>\r\n\r\n                    <select>\r\n                        {years.map(year =>\r\n                            <option key={year} value={year}>{year}</option>\r\n                        )}\r\n                    </select>\r\n\r\n                    <button onClick={this.handleNextMonthButtonClick}>{'>'}</button>\r\n                 </header>\r\n\r\n                 <table>\r\n                     <thead>\r\n                         <tr>\r\n                            {weekDayNames.map(name =>\r\n                                <th key={name}>{name}</th>    \r\n                            )}\r\n                         </tr>\r\n                     </thead>\r\n\r\n                     <tbody>\r\n                        {monthData.map((week, index) =>\r\n                            <tr key={index} className=\"week\">\r\n                                {week.map((date, index) => date ?\r\n                                    <td \r\n                                        key={index} \r\n                                        className=\"day\" \r\n                                        onClick={() => this.handleDayClick(date)}\r\n                                    >{data.getDate()}</td>\r\n                                    :\r\n                                    <td key = {index} />\r\n                                )}\r\n                            </tr>\r\n                        )}\r\n                     </tbody>\r\n                 </table>\r\n            </div>\r\n        )\r\n    }\r\n}",{"ruleId":"26","replacedBy":"27"},{"ruleId":"28","replacedBy":"29"},{"ruleId":"30","severity":1,"message":"31","line":1,"column":8,"nodeType":"32","messageId":"33","endLine":1,"endColumn":12},{"ruleId":"30","severity":1,"message":"34","line":47,"column":24,"nodeType":"32","messageId":"33","endLine":47,"endColumn":33},{"ruleId":"35","severity":2,"message":"36","line":62,"column":26,"nodeType":"32","messageId":"37","endLine":62,"endColumn":36},{"ruleId":"35","severity":2,"message":"38","line":93,"column":39,"nodeType":"32","messageId":"37","endLine":93,"endColumn":43},"no-native-reassign",["39"],"no-negated-in-lhs",["40"],"no-unused-vars","'logo' is defined but never used.","Identifier","unusedVar","'monthNems' is assigned a value but never used.","no-undef","'monthNames' is not defined.","undef","'data' is not defined.","no-global-assign","no-unsafe-negation"]